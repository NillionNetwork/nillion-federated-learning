# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import warnings

import grpc

from nillion_fl.fl_net import \
    fl_service_pb2 as nillion__fl_dot_fl__net_dot_fl__service__pb2

GRPC_GENERATED_VERSION = "1.64.1"
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = "1.65.0"
SCHEDULED_RELEASE_DATE = "June 25, 2024"
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + f" but the generated code in nillion_fl/fl_net/fl_service_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
        + f" This warning will become an error in {EXPECTED_ERROR_RELEASE},"
        + f" scheduled for release on {SCHEDULED_RELEASE_DATE}.",
        RuntimeWarning,
    )


class FederatedLearningServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterClient = channel.unary_unary(
            "/fl_net.FederatedLearningService/RegisterClient",
            request_serializer=nillion__fl_dot_fl__net_dot_fl__service__pb2.RegisterRequest.SerializeToString,
            response_deserializer=nillion__fl_dot_fl__net_dot_fl__service__pb2.ClientInfo.FromString,
            _registered_method=True,
        )
        self.ScheduleLearningIteration = channel.stream_stream(
            "/fl_net.FederatedLearningService/ScheduleLearningIteration",
            request_serializer=nillion__fl_dot_fl__net_dot_fl__service__pb2.StoreIDs.SerializeToString,
            response_deserializer=nillion__fl_dot_fl__net_dot_fl__service__pb2.ScheduleRequest.FromString,
            _registered_method=True,
        )


class FederatedLearningServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ScheduleLearningIteration(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_FederatedLearningServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "RegisterClient": grpc.unary_unary_rpc_method_handler(
            servicer.RegisterClient,
            request_deserializer=nillion__fl_dot_fl__net_dot_fl__service__pb2.RegisterRequest.FromString,
            response_serializer=nillion__fl_dot_fl__net_dot_fl__service__pb2.ClientInfo.SerializeToString,
        ),
        "ScheduleLearningIteration": grpc.stream_stream_rpc_method_handler(
            servicer.ScheduleLearningIteration,
            request_deserializer=nillion__fl_dot_fl__net_dot_fl__service__pb2.StoreIDs.FromString,
            response_serializer=nillion__fl_dot_fl__net_dot_fl__service__pb2.ScheduleRequest.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "fl_net.FederatedLearningService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        "fl_net.FederatedLearningService", rpc_method_handlers
    )


# This class is part of an EXPERIMENTAL API.
class FederatedLearningService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterClient(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/fl_net.FederatedLearningService/RegisterClient",
            nillion__fl_dot_fl__net_dot_fl__service__pb2.RegisterRequest.SerializeToString,
            nillion__fl_dot_fl__net_dot_fl__service__pb2.ClientInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ScheduleLearningIteration(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            "/fl_net.FederatedLearningService/ScheduleLearningIteration",
            nillion__fl_dot_fl__net_dot_fl__service__pb2.StoreIDs.SerializeToString,
            nillion__fl_dot_fl__net_dot_fl__service__pb2.ScheduleRequest.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
